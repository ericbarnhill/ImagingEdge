knitr::opts_chunk$set(echo = TRUE)
#PROJ_DIR = "/home/ericbarnhill/Documents/code/R/masscyto_R"
PROJ_DIR ="./"
CYTOF_PATH <- file.path(PROJ_DIR, "cytof_data_2018_05_30.xlsx")
RTDC_PATH <- file.path(PROJ_DIR, "RT-DC_FCS_Statistics-AAS-1.xls")
knitr::opts_chunk$set(root.dir = PROJ_DIR)
setwd(PROJ_DIR)
packages <- c("gdata","tidyr","dplyr","magrittr", "ggplot2", "brms", "lattice", "HDInterval", "bayesplot")
lapply(packages, require, character.only = T)
exp(1.l2)
exp(1.l2)
exp(1.12)
exp(1.1.5)
exp(1.185)
knitr::opts_chunk$set(echo = TRUE)
#PROJ_DIR = "/home/ericbarnhill/Documents/code/R/masscyto_R"
PROJ_DIR ="./"
CYTOF_PATH <- file.path(PROJ_DIR, "cytof_data_2018_05_30.xlsx")
RTDC_PATH <- file.path(PROJ_DIR, "RT-DC_FCS_Statistics-AAS-1.xls")
knitr::opts_chunk$set(root.dir = PROJ_DIR)
setwd(PROJ_DIR)
packages <- c("gdata","tidyr","dplyr","magrittr", "ggplot2", "brms", "lattice", "HDInterval", "bayesplot")
lapply(packages, require, character.only = T)
theme_set(theme_default())
source('masscyto_clean_gather_data_se.R')
#mass_cyto <- read.xls(xls=CYTOF_PATH,
#                      header=FALSE, skip=3)
data_list <- load_clean_data(CYTOF_PATH)
masscyto_data_tall <- data_list[[1]]
masscyto_data_wide <- data_list[[2]]
print(summary(masscyto_data_wide))
means <- subset(masscyto_data_tall, (Stat_Type == "Mean") & Contrast_Agent != "control")
means_conc_1 <- subset(means, (Concentration == 1))
means_conc_1$Contrast_Agent <- factor(means_conc_1$Contrast_Agent, c("Dotarem", "Magnevist", "Gadovist"))
plt <- ggplot(means_conc_1) +
geom_point(aes(x=Contrast_Agent, y=log(Value), color=Cell_Type)) +
facet_wrap(~ Cell_Type, ncol=3) +
ggtitle("Means By Contrast Agent @ Concentration 1") +
scale_x_discrete(labels = c("Dot", "Mag", "Gad"))
print(plt)
ggplot(subset(means, Contrast_Agent != 'control')) +
geom_line(aes(x=log(Concentration), y=log(Value), group=Cell_Type, color=Cell_Type)) +
facet_wrap(~ Experiment + Contrast_Agent, scales='free')
## hand-coded sliding contrasts:
masscyto_data_wide$GvsM<-ifelse(masscyto_data_wide$Contrast_Agent=="Gadovist",1,
ifelse(masscyto_data_wide$Contrast_Agent=="Magnevist",-1,0))
masscyto_data_wide$MvsD<-ifelse(masscyto_data_wide$Contrast_Agent=="Magnevist",1,
ifelse(masscyto_data_wide$Contrast_Agent=="Dotarem",-1,0))
priors<-c(set_prior("cauchy(0,10)", class = "b"),
set_prior("normal(0,1)", class = "sd"),
set_prior("lkj(2)", class = "cor"))
brm_df <- subset(masscyto_data_wide[c("logMean", "SE", "logConcentration", "GvsM", "MvsD", "Cell_Type", "Contrast_Agent")], Contrast_Agent!="control")
brm_df$Contrast_Agent <- factor(brm_df$Contrast_Agent, labels = c("Gadovist", "Magnevist", "Dotarem"))
cytof_brm_log<-brm(formula = logMean | se(SE) ~
logConcentration +
GvsM+
MvsD+
logConcentration:GvsM +
logConcentration:MvsD +
(1 +
logConcentration +
GvsM+
MvsD+
logConcentration:GvsM +
logConcentration:MvsD
| Cell_Type),
data = brm_df,
family = gaussian(),
prior = priors,
warmup = 1000,
iter = 2000,
chains = 4,
control = list(adapt_delta = 0.99,max_treedepth=15))
stanplot(cytof_brm_log, type="hist",pars=c("^b"))
mag_gad_log <- unlist(exp(posterior_samples(cytof_brm_log, 'b_GvsM', exact_match=T)))
dot_mag_log <- unlist(exp(posterior_samples(cytof_brm_log, 'b_MvsD', exact_match=T)))
print('95% HDI, log(Gad) > log(Mag) :')
print(hdi(mag_gad_log))
print('95% HDI, log(Mag) > log(Dot) :')
print(hdi(dot_mag_log))
mag_gad_log <-unlist(exp(posterior_samples(cytof_brm_log,'b_Intercept',exact_match=TRUE)+
posterior_samples(cytof_brm_log, 'b_GvsM',exact_match=TRUE)))
print('95% credible interval, log(Gad) > log(Mag) :')
print(hdi(mag_gad_log))
mean(unlist(posterior_samples(cytof_brm_log, 'b_GvsM',exact_match=TRUE))>0)
source('load_rtdc_4.R')
rtdc <- load_data(RTDC_PATH)
head(rtdc)
rtdc_wide <- merge(subset(rtdc, Protocol == "Control"), subset(rtdc, Protocol == "Treatment"), by = c("Subject", "Date", "Cell_Type", "Contrast_Agent"), suffixes = c("_ctrl", "_tmt"))
plt <- ggplot(rtdc_wide) +
geom_point(aes(x=E_Mean_log_ctrl,y=E_Mean_log_tmt,col=Subject)) +
geom_abline(slope=1, alpha=0.6) +
facet_wrap(~ Contrast_Agent, ncol = 2) +
ggtitle("Mean Young's Modulus")
print(plt)
rtdc_diffs <- mutate(rtdc_wide, E_diff_Mean = E_Mean_log_ctrl - E_Mean_log_tmt) %>%
mutate(., E_diff_SD = sqrt(E_SD_hi_log_ctrl^2 + E_SD_hi_log_tmt^2)) %>%
mutate(., E_diff_SE = E_diff_SD / sqrt((Events_ctrl + Events_tmt)/2)) %>%
select(., c("Subject", "Date", "Cell_Type", "Contrast_Agent", "E_diff_Mean", "E_diff_SE"))
print(head(rtdc_diffs, n=20))
#print(head(rtdc_wide))
## Do the contrast coding manually:
rtdc_diffs$Gad_Mag<-ifelse(rtdc_diffs$Contrast_Agent=="Gadovist",-1,
ifelse(rtdc_diffs$Contrast_Agent=="Magnevist",1,0))
rtdc_diffs$Mag_Dot<-ifelse(rtdc_diffs$Contrast_Agent=="Magnevist",-1,
ifelse(rtdc_diffs$Contrast_Agent=="Dotarem",1,0))
rtdc_diffs$GdCl3_All<-ifelse(rtdc_diffs$Contrast_Agent=="GdCl3",-1,
ifelse(rtdc_diffs$Contrast_Agent=="Gadovist",1/3,
ifelse(rtdc_diffs$Contrast_Agent=="Magnevist",1/3,
ifelse(rtdc_diffs$Contrast_Agent=="Dotarem",1/3,NA)
)
))
diffMono<-subset(rtdc_diffs,Cell_Type=="Monocytes")
head(diffMono)
diffNeutro<-subset(rtdc_diffs,Cell_Type=="Neutrophils")
priors_cauchy_diff2 <- c(set_prior("cauchy(0, 10)", class = "Intercept"),
set_prior("cauchy(0, 10)", class = "b"),
set_prior("cauchy(0, 10)", class = "sd")
)
mdiffMonoContrAgt_E_ME <- brm(formula = E_diff_Mean | se(E_diff_SE) ~ 1+Gad_Mag+Mag_Dot+GdCl3_All+
(1 | Subject),
data = diffMono, family = gaussian(), prior = priors_cauchy_diff2,
iter = 2000, chains = 4, control = list(adapt_delta = 0.999))
stanplot(mdiffMonoContrAgt_E_ME, type="hist",pars=c("^b"))
mMonoContrAgtdiffEpostME<-posterior_samples(mdiffMonoContrAgt_E_ME, "^b")
print("Prob Gad > Mag")
mean(mMonoContrAgtdiffEpostME$b_Gad_Mag>0)
print("Prob Gad < Mag")
mean(mMonoContrAgtdiffEpostME$b_Gad_Mag<0)
print("Prob Mag > Dot")
mean(mMonoContrAgtdiffEpostME$b_Mag_Dot>0)
print("Prob GdCl3 > All")
mean(mMonoContrAgtdiffEpostME$b_GdCl3_All>0)
priors_cauchy_diff2 <- c(set_prior("cauchy(0, 10)", class = "Intercept"),
set_prior("cauchy(0, 10)", class = "b"),
set_prior("cauchy(0, 10)", class = "sd")
)
mdiffNeutroContrAgt_E_ME <- brm(formula = E_diff_Mean | se(E_diff_SE) ~ 1+Gad_Mag+Mag_Dot+GdCl3_All+
(1 | Subject),
data = diffNeutro, family = gaussian(), prior = priors_cauchy_diff2,
iter = 2000, chains = 4, control = list(adapt_delta = 0.999))
stanplot(mdiffNeutroContrAgt_E_ME, type="hist",pars=c("^b"))
mNeutroContrAgtdiffEpostME<-posterior_samples(mdiffNeutroContrAgt_E_ME, "^b")
print("Prob Gad < Mag")
mean(mNeutroContrAgtdiffEpostME$b_Gad_Mag<0)
print("Prob Mag > Dot")
mean(mNeutroContrAgtdiffEpostME$b_Mag_Dot>0)
print("Prob GdCl3 < All")
mean(mNeutroContrAgtdiffEpostME$b_GdCl3_All<0)
shiny::runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
runApp('Documents/code/R/masscyto_R/shiny_app')
source('~/Documents/code/R/masscyto_R/shiny_app/get_formula.R')
runApp('Documents/code/R/masscyto_R/shiny_app')
setwd("/home/ericbarnhill/Documents/code/insight/rtr")
require(lme4)
# read in dfs
dfs = data.frame(
term = character(),
score = double(),
period = integer()
)
for (n in 0:2) {
filename = paste0("df_", n, ".csv")
df = read.csv(filename, stringsAsFactors = F)
term = df$key
score = as.numeric(df$score)
print(head(score))
period = rep(n, length(score))
dfs = rbind(dfs, data.frame(term, score, period))
}
print(head(dfs))
print(summary(dfs))
null_mod = lm(score ~ 1, data=dfs)
rand_mod = lmer(score ~ (1 | term), data=dfs)
print("Information criteria for model comparison:")
AIC(null_mod, rand_mod)
BIC(null_mod, rand_mod)
print("Is it solid? Information criteria with scores scrambled:")
df_scram = dfs
df_scram$score = sample(df_scram$score)
null_mod_scram = lm(score ~ 1, data=df_scram)
rand_mod_scram = lmer(score ~ (1 | term), data=df_scram)
AIC(null_mod_scram, rand_mod_scram)
BIC(null_mod_scram, rand_mod_scram)
#print("can we get a posterior using Bayes?")
#null_mod_brms = brm(score ~ 1, data=dfs)
#rand_mod_brms = brm(score ~ (1 | term), data=dfs)
#loo_result = brms::loo(null_mod_brms, rand_mod_brms)
source('~/Documents/code/insight/rtr/presentations/run_charts.R', echo=TRUE)
source('~/Documents/code/insight/rtr/presentations/run_charts.R')
source('~/Documents/code/insight/rtr/presentations/run_charts.R')
source('~/Documents/code/insight/rtr/presentations/run_charts.R')
source('~/Documents/code/insight/rtr/presentations/run_charts.R')
source('~/Documents/code/insight/rtr/presentations/run_charts.R')
2
require(ggplot2)
require(reshape2)
require(dplyr)
require(magrittr)
require(ggthemes)
chart1 = read.csv("chart_1.csv") %>%
gather(., key = App, value = Value, -Year)
chart2 = read.csv("chart_2.csv") %>%
gather(., key = App, value = Value, -Year)
chart3 = read.csv("chart_3.csv") %>%
gather(., key = App, value = Value, -Year)
chart4 = read.csv("chart_4.csv") %>%
gather(., key = App, value = Value, -Year)
NORM_VALUE = 33
charts = list(chart1, chart2, chart3, chart4)
for (n in 1:length(charts)) {
chart = charts[[n]]
chart$App <- factor(chart$App, levels=c("WoS", "IE"))
plt <- ggplot(data = chart) +
geom_bar(aes(x=Year, y=Value / NORM_VALUE, group=App, fill=App),
stat="identity", position="dodge") +
scale_y_continuous(limits = c(0,2), expand=c(0,0)) +
scale_x_continuous(breaks = c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017)) +
ylab("Measurements (normalized to Wos 2013)") +
theme_classic()
print(plt)
filename = paste0("plot_", n, ".png")
ggsave(filename, plt)
}
length(charts)
length(charts)
h = 4
hg
h
chart1 = read.csv("chart_1.csv") %>%
gather(., key = App, value = Value, -Year)
chart2 = read.csv("chart_2.csv") %>%
gather(., key = App, value = Value, -Year)
chart3 = read.csv("chart_3.csv") %>%
gather(., key = App, value = Value, -Year)
chart4 = read.csv("chart_4.csv") %>%
gather(., key = App, value = Value, -Year)
NORM_VALUE = 33
charts = list(chart1, chart2, chart3, chart4)
for (n in 1:length(charts)) {
chart = charts[[n]]
chart$App <- factor(chart$App, levels=c("WoS", "IE"))
plt <- ggplot(data = chart) +
geom_bar(aes(x=Year, y=Value / NORM_VALUE, group=App, fill=App),
stat="identity", position="dodge") +
scale_y_continuous(limits = c(0,2), expand=c(0,0)) +
scale_x_continuous(breaks = c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017)) +
ylab("Measurements (normalized to Wos 2013)") +
theme_classic()
print(plt)
filename = paste0("plot_", n, ".png")
ggsave(filename, plt)
}
charts[[n]]
source('~/Documents/code/insight/rtr/presentations/run_charts.R')
source('~/Documents/code/insight/rtr/presentations/run_charts.R')
source('~/Documents/code/insight/rtr/presentations/run_charts.R')
